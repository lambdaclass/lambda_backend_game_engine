syntax = "proto3";

/*
 * Shared structs
 */

/*
 * Direction is a vector with a magnitude of 1
 */
message Direction {
  float x = 1;
  float y = 2;
}

/*
 * Position of an entity in the arena
 */
message Position {
  float x = 1;
  float y = 2;
}

message LobbyEvent {
  oneof event {
    LeaveLobby leave = 1;
    LeftLobby left = 2;
    JoinedLobby joined = 3;
    GameState game = 4;
  }
}

message LeaveLobby { }
message LeftLobby { }
message JoinedLobby { }

message GameEvent {
  oneof event {
    GameJoined joined = 1;
    GameState update = 2;
    GameFinished finished = 3;
    PingUpdate ping = 4;
  }
}

message GameFinished {
  Entity winner = 1;
  map<uint64, Entity> players = 2;
}

message PingUpdate {
  uint64 latency = 1;
}

message GameJoined {
  uint64 player_id = 1;
  Configuration config = 2;
}

message Configuration {
  ConfigGame game = 1;
  ConfigMap map = 2;
  repeated ConfigCharacter characters = 3;
}

message ConfigGame {
  float tick_rate_ms = 1;
}

message ConfigMap {
  float radius = 1;
}

message ConfigCharacter {
  string name = 1;
  bool active = 2;
  float base_speed = 3;
  float base_size = 4;
  uint64 base_health = 5;
  uint64 max_inventory_size = 6;
  map<string, ConfigSkill> skills = 7;
}

message ConfigSkill {
  string name = 1;
  uint64 cooldown_ms = 2;
  uint64 execution_duration_ms = 3;
  float targetting_radius = 4;
  float targetting_angle = 5;
  float targetting_range = 6;
  uint64 stamina_cost = 7;
}


/*
 * Game State
 */
message GameState {
  string game_id = 1;
  map<uint64, Entity> players = 2;
  map<uint64, Entity> projectiles = 3;
  map<uint64, int64> player_timestamps = 4;
  int64 server_timestamp = 5;
  Zone zone = 6;
  repeated KillEntry killfeed = 7;
  map<uint64, uint64> damage_taken = 8;
  map<uint64, uint64> damage_done = 9;
  map<uint64, Entity> power_ups = 10;
  GameStatus status = 11;
  int64 start_game_timestamp = 12;
  map<uint64, Entity> items = 13;
  map<uint64, Entity> obstacles = 14;
  map<uint64, Entity> pools = 15;
  map<uint64, Entity> crates = 16;
  map<uint64, Entity> bushes = 17;
  map<uint64, Entity> traps = 18;
}

enum GameStatus {
  PREPARING = 0;
  RUNNING = 1;
  ENDED = 2;
}

/*
 * Info about an entity
 * id: unique identifier
 * category: player, projectile, obstacle, item.
 * shape: circle, point, line, polygon, point.
 * name: unique name of the entity
 * position: position of the entity (polyogns and lines don't have a position)
 * radius: radius of the entity (only circles have a radius)
 * vertices: vertices of the entity (only polygons and lines have vertices)
 * collides_with: entities that the entity is colliding with
 * speed: speed of the entity
 * direction: direction of the entity if it is moving
 * is_moving: true if the entity is moving
 */
message Entity {
  uint64 id = 1;
  string category = 2;
  string shape = 3;
  string name = 4;
  Position position = 5;
  float radius = 6;
  repeated Position vertices = 7;
  repeated uint64 collides_with = 8;
  float speed = 9;
  Direction direction = 10;
  bool is_moving = 11;
  oneof aditional_info {
    Player player = 12;
    Projectile projectile = 13;
    Obstacle obstacle = 14;
    PowerUp power_up = 15;
    Item item = 16;
    Pool pool = 17;
    Crate crate = 18;
    Bush bush = 19;
    Trap trap = 20;
  }
}

message Player {
  uint64 health = 1;
  uint64 kill_count = 2;
  repeated PlayerAction current_actions = 3;
  uint64 available_stamina = 4;
  uint64 max_stamina = 5;
  uint64 stamina_interval = 6;
  bool recharging_stamina = 7;
  string character_name = 8;
  uint64 power_ups = 9;
  repeated Effect effects = 10;
  Item inventory = 11;
  map<string, uint64> cooldowns = 12;
  repeated uint64 visible_players = 13;
  bool on_bush  = 14;
}

message Effect {
  string name = 1;
  uint32 duration_ms = 2;
}

message Item {
  string name = 2;
}

message Projectile {
  uint64 damage = 1;
  uint64 owner_id = 2;
  ProjectileStatus status = 3;
  string skill_key = 4;
}

enum ProjectileStatus {
  ACTIVE = 0;
  EXPLODED = 1;
  CONSUMED = 2;
}

message Obstacle {
  string color = 1;
}

message PowerUp {
  uint64 owner_id = 1;
  PowerUpstatus status = 2;
}

message Crate {
  uint64 health = 1;
  uint64 amount_of_power_ups = 2;
  CrateStatus status = 3;
}

enum CrateStatus {
  FINE = 0;
  DESTROYED = 1;
}

enum  PowerUpstatus {
  AVAILABLE = 0;
  TAKEN = 1;
}

message Pool {
  uint64 owner_id = 1;
}

message Bush {
}

message Trap {
  uint64 owner_id = 1;
  string name = 2;
  TrapStatus status = 3;
}

message PlayerAction {
    PlayerActionType action = 1;
    uint64 duration = 2;
    Position destination = 3;
}

enum PlayerActionType {
    MOVING = 0;
    STARTING_SKILL_1 = 1;
    STARTING_SKILL_2 = 2;
    EXECUTING_SKILL_1 = 3;
    EXECUTING_SKILL_2 = 4;
    EXECUTING_SKILL_3 = 5;
}

enum TrapStatus{
  PREPARED = 0;
  TRIGGERED = 1;
  USED = 2;
}

/*
 * Player Actions
 */
message Move {
  Direction direction = 1;
}

message Attack {
  string skill = 1;
  AttackParameters parameters = 2;
}

message AttackParameters {
  Direction target = 1;
}

message UseItem {
  uint64 item = 1;
}

message GameAction {
  oneof action_type {
    Move move = 1;
    Attack attack = 2;
    UseItem use_item = 4;
  }
  int64 timestamp = 3;
}

message Zone {
  float radius = 1;
  bool enabled = 2;
  int64 next_zone_change_timestamp = 3;
  bool shrinking = 4;
}

message KillEntry {
  uint64 killer_id = 1;
  uint64 victim_id = 2;
}
