syntax = "proto3";

/*
 * Shared structs
 */

/*
 * ProtoDirection is a vector with a magnitude of 1
 */
message ProtoDirection {
  float x = 1;
  float y = 2;
}

/*
 * ProtoPosition of an entity in the arena
 */
message ProtoPosition {
  float x = 1;
  float y = 2;
}

message ProtoLobbyEvent {
  oneof event {
    ProtoLeaveLobby leave = 1;
    ProtoLeftLobby left = 2;
    ProtoJoinedLobby joined = 3;
    ProtoGameState game = 4;
  }
}

message ProtoLeaveLobby { }
message ProtoLeftLobby { }
message ProtoJoinedLobby { }

message ProtoGameEvent {
  oneof event {
    ProtoGameJoined joined = 1;
    ProtoGameState update = 2;
    ProtoGameFinished finished = 3;
    ProtoPingUpdate ping = 4;
    ProtoToggleBots toggle_bots = 5;
  }
}

message ProtoGameFinished {
  ProtoEntity winner = 1;
  map<uint64, ProtoEntity> players = 2;
}

message ProtoPingUpdate {
  uint64 latency = 1;
}

message ProtoGameJoined {
  uint64 player_id = 1;
  ProtoConfiguration config = 2;
  repeated ProtoBountyInfo bounties = 3;
}

message ProtoConfiguration {
  ProtoConfigGame game = 1;
  ProtoConfigMap map = 2;
  repeated ProtoConfigCharacter characters = 3;
  ProtoClientConfig client_config = 4;
}

message ProtoConfigGame {
  float tick_rate_ms = 1;
  float bounty_pick_time_ms = 2;
  float start_game_time_ms = 3;
}

message ProtoConfigMap {
  float radius = 1;
}

message ProtoConfigCharacter {
  string name = 1;
  bool active = 2;
  float base_speed = 3;
  float base_size = 4;
  uint64 base_health = 5;
  uint64 max_inventory_size = 6;
  map<string, ProtoConfigSkill> skills = 7;
}

message ProtoClientConfig {
  ProtoConfigServerUpdate server_update = 1;
}

message ProtoConfigServerUpdate {
  uint64 timestamp_difference_samples_to_check_warning = 1;
  uint64 timestamp_differences_samples_max_length = 2;
  uint64 show_warning_threshold = 3;
  uint64 stop_warning_threshold = 4;
  uint64 ms_without_update_show_warning = 5;
  uint64 ms_without_update_disconnect = 6;
}

message ProtoConfigSkill {
  string name = 1;
  uint64 cooldown_ms = 2;
  uint64 execution_duration_ms = 3;
  float targetting_radius = 4;
  float targetting_angle = 5;
  float targetting_range = 6;
  uint64 stamina_cost = 7;
  float targetting_offset = 8;
}


/*
 * Game State
 */
message ProtoGameState {
  string game_id = 1;
  map<uint64, ProtoEntity> players = 2;
  map<uint64, ProtoEntity> projectiles = 3;
  map<uint64, int64> player_timestamps = 4;
  int64 server_timestamp = 5;
  ProtoZone zone = 6;
  repeated ProtoKillEntry killfeed = 7;
  map<uint64, uint64> damage_taken = 8;
  map<uint64, uint64> damage_done = 9;
  map<uint64, ProtoEntity> power_ups = 10;
  GameStatus status = 11;
  int64 start_game_timestamp = 12;
  map<uint64, ProtoEntity> items = 13;
  map<uint64, ProtoEntity> obstacles = 14;
  map<uint64, ProtoEntity> pools = 15;
  map<uint64, ProtoEntity> crates = 16;
  map<uint64, ProtoEntity> bushes = 17;
  map<uint64, ProtoEntity> traps = 18;
}

enum GameStatus {
  PREPARING = 0;
  RUNNING = 1;
  ENDED = 2;
  SELECTING_BOUNTY = 3;
}

/*
 * Info about an entity
 * id: unique identifier
 * category: player, projectile, obstacle, item.
 * shape: circle, point, line, polygon, point.
 * name: unique name of the entity
 * position: position of the entity (polyogns and lines don't have a position)
 * radius: radius of the entity (only circles have a radius)
 * vertices: vertices of the entity (only polygons and lines have vertices)
 * collides_with: entities that the entity is colliding with
 * speed: speed of the entity
 * direction: direction of the entity if it is moving
 * is_moving: true if the entity is moving
 */
message ProtoEntity {
  uint64 id = 1;
  string category = 2;
  string shape = 3;
  string name = 4;
  ProtoPosition position = 5;
  float radius = 6;
  repeated ProtoPosition vertices = 7;
  repeated uint64 collides_with = 8;
  float speed = 9;
  ProtoDirection direction = 10;
  bool is_moving = 11;
  oneof aditional_info {
    ProtoPlayer player = 12;
    ProtoProjectile projectile = 13;
    ProtoObstacle obstacle = 14;
    ProtoPowerUp power_up = 15;
    ProtoItem item = 16;
    ProtoPool pool = 17;
    ProtoCrate crate = 18;
    ProtoBush bush = 19;
    ProtoTrap trap = 20;
  }
}

message ProtoPlayer {
  uint64 health = 1;
  uint64 kill_count = 2;
  repeated ProtoPlayerAction current_actions = 3;
  uint64 available_stamina = 4;
  uint64 max_stamina = 5;
  uint64 stamina_interval = 6;
  bool recharging_stamina = 7;
  string character_name = 8;
  uint64 power_ups = 9;
  repeated ProtoEffect effects = 10;
  ProtoItem inventory = 11;
  map<string, uint64> cooldowns = 12;
  repeated uint64 visible_players = 13;
  bool on_bush = 14;
  bool forced_movement = 15;
}

message ProtoEffect {
  string name = 1;
  uint32 duration_ms = 2;
  uint64 id = 3;
}

message ProtoItem {
  string name = 2;
}

message ProtoProjectile {
  uint64 damage = 1;
  uint64 owner_id = 2;
  ProjectileStatus status = 3;
  string skill_key = 4;
}

enum ProjectileStatus {
  ACTIVE = 0;
  EXPLODED = 1;
  CONSUMED = 2;
}

message ProtoObstacle {
  string color = 1;
  bool collisionable = 2;
  string status = 3;
}

message ProtoPowerUp {
  uint64 owner_id = 1;
  ProtoPowerUpstatus status = 2;
}

message ProtoCrate {
  uint64 health = 1;
  uint64 amount_of_power_ups = 2;
  ProtoCrateStatus status = 3;
}

enum ProtoCrateStatus {
  FINE = 0;
  DESTROYED = 1;
}

enum  ProtoPowerUpstatus {
  AVAILABLE = 0;
  TAKEN = 1;
  UNAVAILABLE = 2;
}

message ProtoPool {
  uint64 owner_id = 1;
  ProtoPoolStatus status = 2;
  repeated ProtoEffect effects = 3;
  string skill_key = 4;
}

message ProtoBush {
}

message ProtoTrap {
  uint64 owner_id = 1;
  string name = 2;
  ProtoTrapStatus status = 3;
}

message ProtoPlayerAction {
    ProtoPlayerActionType action = 1;
    uint64 duration = 2;
    ProtoPosition destination = 3;
    ProtoPosition direction = 4;
}

enum ProtoPlayerActionType {
    MOVING = 0;
    STARTING_SKILL_1 = 1;
    STARTING_SKILL_2 = 2;
    EXECUTING_SKILL_1 = 3;
    EXECUTING_SKILL_2 = 4;
    EXECUTING_SKILL_3 = 5;
}

enum ProtoTrapStatus{
  PENDING = 0;
  PREPARED = 1;
  TRIGGERED = 2;
  USED = 3;
}

enum ProtoPoolStatus{
  WAITING = 0;
  READY = 1;
}

/*
 * ProtoPlayer Actions
 */
message ProtoMove {
  ProtoDirection direction = 1;
}

message ProtoAttack {
  string skill = 1;
  ProtoAttackParameters parameters = 2;
}

message ProtoAttackParameters {
  ProtoDirection target = 1;
}

message ProtoUseItem {
  uint64 item = 1;
}

message ProtoSelectBounty {
  string bounty_quest_id = 1;
}

message ProtoToggleZone { }
message ProtoToggleBots { }
message ProtoChangeTickrate {
  int64 tickrate = 1;
}

message ProtoGameAction {
  oneof action_type {
    ProtoMove move = 1;
    ProtoAttack attack = 2;
    ProtoUseItem use_item = 4;
    ProtoSelectBounty select_bounty = 5;
    ProtoToggleZone toggle_zone = 6;
    ProtoToggleBots toggle_bots = 7;
    ProtoChangeTickrate change_tickrate = 8;
  }
  int64 timestamp = 3;
}

message ProtoZone {
  float radius = 1;
  bool enabled = 2;
  int64 next_zone_change_timestamp = 3;
  bool shrinking = 4;
}

message ProtoKillEntry {
  uint64 killer_id = 1;
  uint64 victim_id = 2;
}

message ProtoBountyInfo {
  string id = 1;
  string description = 2;
  string quest_type = 3;
  ProtoCurrencyReward reward = 4;
}

message ProtoCurrencyReward {
  string currency  = 1;
  int64 amount = 2;
}
